package model;

// default package
// Generated Mar 15, 2014 7:27:54 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Tquestionsolution generated by hbm2java
 */
@Entity
@Table(name = "tquestionsolution")
public class Tquestionsolution implements java.io.Serializable {

	private Integer tquestSolId;
	private Tquestionitem tquestionitemByTquestNextItemId;
	private Tquestionitem tquestionitemByTquestPreviousItemId;
	private Tquestion tquestion;
	private Tquestionitem tquestionitemByTquestItemId;
	private Byte tquestSolOrder;

	public Tquestionsolution() {
	}

	public Tquestionsolution(Tquestionitem tquestionitemByTquestNextItemId,
			Tquestionitem tquestionitemByTquestPreviousItemId,
			Tquestion tquestion, Tquestionitem tquestionitemByTquestItemId,
			Byte tquestSolOrder) {
		this.tquestionitemByTquestNextItemId = tquestionitemByTquestNextItemId;
		this.tquestionitemByTquestPreviousItemId = tquestionitemByTquestPreviousItemId;
		this.tquestion = tquestion;
		this.tquestionitemByTquestItemId = tquestionitemByTquestItemId;
		this.tquestSolOrder = tquestSolOrder;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "TQUEST_SOL_ID", unique = true, nullable = false)
	public Integer getTquestSolId() {
		return this.tquestSolId;
	}

	public void setTquestSolId(Integer tquestSolId) {
		this.tquestSolId = tquestSolId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TQUEST_NEXT_ITEM_ID")
	public Tquestionitem getTquestionitemByTquestNextItemId() {
		return this.tquestionitemByTquestNextItemId;
	}

	public void setTquestionitemByTquestNextItemId(
			Tquestionitem tquestionitemByTquestNextItemId) {
		this.tquestionitemByTquestNextItemId = tquestionitemByTquestNextItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TQUEST_PREVIOUS_ITEM_ID")
	public Tquestionitem getTquestionitemByTquestPreviousItemId() {
		return this.tquestionitemByTquestPreviousItemId;
	}

	public void setTquestionitemByTquestPreviousItemId(
			Tquestionitem tquestionitemByTquestPreviousItemId) {
		this.tquestionitemByTquestPreviousItemId = tquestionitemByTquestPreviousItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TQUESTION_ID")
	public Tquestion getTquestion() {
		return this.tquestion;
	}

	public void setTquestion(Tquestion tquestion) {
		this.tquestion = tquestion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TQUEST_ITEM_ID")
	public Tquestionitem getTquestionitemByTquestItemId() {
		return this.tquestionitemByTquestItemId;
	}

	public void setTquestionitemByTquestItemId(
			Tquestionitem tquestionitemByTquestItemId) {
		this.tquestionitemByTquestItemId = tquestionitemByTquestItemId;
	}

	@Column(name = "TQUEST_SOL_ORDER")
	public Byte getTquestSolOrder() {
		return this.tquestSolOrder;
	}

	public void setTquestSolOrder(Byte tquestSolOrder) {
		this.tquestSolOrder = tquestSolOrder;
	}

}
