package model;

// default package
// Generated Mar 15, 2014 7:27:54 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Sharedquestion generated by hbm2java
 */
@Entity
@Table(name = "sharedquestion")
public class Sharedquestion implements java.io.Serializable {

	private Integer sharedQuestId;
	private Lecturer lecturerBySharerId;
	private Question question;
	private Lecturer lecturerByShareeId;
	private boolean sharedQuestViewable;
	private boolean sharedQuestModifiable;
	private boolean sharedQuestResharable;

	public Sharedquestion() {
	}

	public Sharedquestion(boolean sharedQuestViewable,
			boolean sharedQuestModifiable, boolean sharedQuestResharable) {
		this.sharedQuestViewable = sharedQuestViewable;
		this.sharedQuestModifiable = sharedQuestModifiable;
		this.sharedQuestResharable = sharedQuestResharable;
	}

	public Sharedquestion(Lecturer lecturerBySharerId, Question question,
			Lecturer lecturerByShareeId, boolean sharedQuestViewable,
			boolean sharedQuestModifiable, boolean sharedQuestResharable) {
		this.lecturerBySharerId = lecturerBySharerId;
		this.question = question;
		this.lecturerByShareeId = lecturerByShareeId;
		this.sharedQuestViewable = sharedQuestViewable;
		this.sharedQuestModifiable = sharedQuestModifiable;
		this.sharedQuestResharable = sharedQuestResharable;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "SHARED_QUEST_ID", unique = true, nullable = false)
	public Integer getSharedQuestId() {
		return this.sharedQuestId;
	}

	public void setSharedQuestId(Integer sharedQuestId) {
		this.sharedQuestId = sharedQuestId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHARER_ID")
	public Lecturer getLecturerBySharerId() {
		return this.lecturerBySharerId;
	}

	public void setLecturerBySharerId(Lecturer lecturerBySharerId) {
		this.lecturerBySharerId = lecturerBySharerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUESTION_ID")
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHAREE_ID")
	public Lecturer getLecturerByShareeId() {
		return this.lecturerByShareeId;
	}

	public void setLecturerByShareeId(Lecturer lecturerByShareeId) {
		this.lecturerByShareeId = lecturerByShareeId;
	}

	@Column(name = "SHARED_QUEST_VIEWABLE", nullable = false)
	public boolean isSharedQuestViewable() {
		return this.sharedQuestViewable;
	}

	public void setSharedQuestViewable(boolean sharedQuestViewable) {
		this.sharedQuestViewable = sharedQuestViewable;
	}

	@Column(name = "SHARED_QUEST_MODIFIABLE", nullable = false)
	public boolean isSharedQuestModifiable() {
		return this.sharedQuestModifiable;
	}

	public void setSharedQuestModifiable(boolean sharedQuestModifiable) {
		this.sharedQuestModifiable = sharedQuestModifiable;
	}

	@Column(name = "SHARED_QUEST_RESHARABLE", nullable = false)
	public boolean isSharedQuestResharable() {
		return this.sharedQuestResharable;
	}

	public void setSharedQuestResharable(boolean sharedQuestResharable) {
		this.sharedQuestResharable = sharedQuestResharable;
	}

}
