package model;

// default package
// Generated Mar 15, 2014 7:27:54 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Lecturer generated by hbm2java
 */
@Entity
@Table(name = "lecturer")
public class Lecturer implements java.io.Serializable {

	private String lectrId;
	private String lectrName;
	private String lectrEmail;
	private String lectrFone;
	private Set<Test> tests = new HashSet<Test>(0);
	private Set<Sharedquestion> sharedquestionsForShareeId = new HashSet<Sharedquestion>(
			0);
	private Set<Testreview> testreviews = new HashSet<Testreview>(0);
	private Set<Subjectassignment> subjectassignments = new HashSet<Subjectassignment>(
			0);
	private Set<Questionowner> questionowners = new HashSet<Questionowner>(0);
	private Set<Tquestionowner> tquestionowners = new HashSet<Tquestionowner>(0);
	private Set<Sharedquestion> sharedquestionsForSharerId = new HashSet<Sharedquestion>(
			0);

	public Lecturer() {
	}

	public Lecturer(String lectrId, String lectrName) {
		this.lectrId = lectrId;
		this.lectrName = lectrName;
	}

	public Lecturer(String lectrId, String lectrName, String lectrEmail,
			String lectrFone, Set<Test> tests,
			Set<Sharedquestion> sharedquestionsForShareeId,
			Set<Testreview> testreviews,
			Set<Subjectassignment> subjectassignments,
			Set<Questionowner> questionowners,
			Set<Tquestionowner> tquestionowners,
			Set<Sharedquestion> sharedquestionsForSharerId) {
		this.lectrId = lectrId;
		this.lectrName = lectrName;
		this.lectrEmail = lectrEmail;
		this.lectrFone = lectrFone;
		this.tests = tests;
		this.sharedquestionsForShareeId = sharedquestionsForShareeId;
		this.testreviews = testreviews;
		this.subjectassignments = subjectassignments;
		this.questionowners = questionowners;
		this.tquestionowners = tquestionowners;
		this.sharedquestionsForSharerId = sharedquestionsForSharerId;
	}

	@Id
	@Column(name = "LECTR_ID", unique = true, nullable = false, length = 10)
	public String getLectrId() {
		return this.lectrId;
	}

	public void setLectrId(String lectrId) {
		this.lectrId = lectrId;
	}

	@Column(name = "LECTR_NAME", nullable = false, length = 100)
	public String getLectrName() {
		return this.lectrName;
	}

	public void setLectrName(String lectrName) {
		this.lectrName = lectrName;
	}

	@Column(name = "LECTR_EMAIL", length = 100)
	public String getLectrEmail() {
		return this.lectrEmail;
	}

	public void setLectrEmail(String lectrEmail) {
		this.lectrEmail = lectrEmail;
	}

	@Column(name = "LECTR_FONE", length = 12)
	public String getLectrFone() {
		return this.lectrFone;
	}

	public void setLectrFone(String lectrFone) {
		this.lectrFone = lectrFone;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecturer")
	public Set<Test> getTests() {
		return this.tests;
	}

	public void setTests(Set<Test> tests) {
		this.tests = tests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecturerByShareeId")
	public Set<Sharedquestion> getSharedquestionsForShareeId() {
		return this.sharedquestionsForShareeId;
	}

	public void setSharedquestionsForShareeId(
			Set<Sharedquestion> sharedquestionsForShareeId) {
		this.sharedquestionsForShareeId = sharedquestionsForShareeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecturer")
	public Set<Testreview> getTestreviews() {
		return this.testreviews;
	}

	public void setTestreviews(Set<Testreview> testreviews) {
		this.testreviews = testreviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecturer")
	public Set<Subjectassignment> getSubjectassignments() {
		return this.subjectassignments;
	}

	public void setSubjectassignments(Set<Subjectassignment> subjectassignments) {
		this.subjectassignments = subjectassignments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecturer")
	public Set<Questionowner> getQuestionowners() {
		return this.questionowners;
	}

	public void setQuestionowners(Set<Questionowner> questionowners) {
		this.questionowners = questionowners;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecturer")
	public Set<Tquestionowner> getTquestionowners() {
		return this.tquestionowners;
	}

	public void setTquestionowners(Set<Tquestionowner> tquestionowners) {
		this.tquestionowners = tquestionowners;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecturerBySharerId")
	public Set<Sharedquestion> getSharedquestionsForSharerId() {
		return this.sharedquestionsForSharerId;
	}

	public void setSharedquestionsForSharerId(
			Set<Sharedquestion> sharedquestionsForSharerId) {
		this.sharedquestionsForSharerId = sharedquestionsForSharerId;
	}

}
