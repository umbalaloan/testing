package model;

// default package
// Generated Mar 15, 2014 7:27:54 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Questionitem generated by hbm2java
 */
@Entity
@Table(name = "questionitem")
public class Questionitem implements java.io.Serializable {

	private Integer questItemId;
	private Question question;
	private String questItemFace;
	private String questItemValue;
	private Set<Questionsolution> questionsolutionsForPreviousQuestItemId = new HashSet<Questionsolution>(
			0);
	private Set<Questionsolution> questionsolutionsForQuestItemId = new HashSet<Questionsolution>(
			0);
	private Set<Questionsolution> questionsolutionsForNextQuestItemId = new HashSet<Questionsolution>(
			0);
	private Set<Questionitemfigure> questionitemfigures = new HashSet<Questionitemfigure>(
			0);
	private Set<Questioniteminfo> questioniteminfos = new HashSet<Questioniteminfo>(
			0);

	public Questionitem() {
	}

	public Questionitem(Question question, String questItemFace,
			String questItemValue,
			Set<Questionsolution> questionsolutionsForPreviousQuestItemId,
			Set<Questionsolution> questionsolutionsForQuestItemId,
			Set<Questionsolution> questionsolutionsForNextQuestItemId,
			Set<Questionitemfigure> questionitemfigures,
			Set<Questioniteminfo> questioniteminfos) {
		this.question = question;
		this.questItemFace = questItemFace;
		this.questItemValue = questItemValue;
		this.questionsolutionsForPreviousQuestItemId = questionsolutionsForPreviousQuestItemId;
		this.questionsolutionsForQuestItemId = questionsolutionsForQuestItemId;
		this.questionsolutionsForNextQuestItemId = questionsolutionsForNextQuestItemId;
		this.questionitemfigures = questionitemfigures;
		this.questioniteminfos = questioniteminfos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "QUEST_ITEM_ID", unique = true, nullable = false)
	public Integer getQuestItemId() {
		return this.questItemId;
	}

	public void setQuestItemId(Integer questItemId) {
		this.questItemId = questItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUESTION_ID")
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@Column(name = "QUEST_ITEM_FACE", length = 65535)
	public String getQuestItemFace() {
		return this.questItemFace;
	}

	public void setQuestItemFace(String questItemFace) {
		this.questItemFace = questItemFace;
	}

	@Column(name = "QUEST_ITEM_VALUE", length = 65535)
	public String getQuestItemValue() {
		return this.questItemValue;
	}

	public void setQuestItemValue(String questItemValue) {
		this.questItemValue = questItemValue;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questionitemByPreviousQuestItemId")
	public Set<Questionsolution> getQuestionsolutionsForPreviousQuestItemId() {
		return this.questionsolutionsForPreviousQuestItemId;
	}

	public void setQuestionsolutionsForPreviousQuestItemId(
			Set<Questionsolution> questionsolutionsForPreviousQuestItemId) {
		this.questionsolutionsForPreviousQuestItemId = questionsolutionsForPreviousQuestItemId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questionitemByQuestItemId")
	public Set<Questionsolution> getQuestionsolutionsForQuestItemId() {
		return this.questionsolutionsForQuestItemId;
	}

	public void setQuestionsolutionsForQuestItemId(
			Set<Questionsolution> questionsolutionsForQuestItemId) {
		this.questionsolutionsForQuestItemId = questionsolutionsForQuestItemId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questionitemByNextQuestItemId")
	public Set<Questionsolution> getQuestionsolutionsForNextQuestItemId() {
		return this.questionsolutionsForNextQuestItemId;
	}

	public void setQuestionsolutionsForNextQuestItemId(
			Set<Questionsolution> questionsolutionsForNextQuestItemId) {
		this.questionsolutionsForNextQuestItemId = questionsolutionsForNextQuestItemId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questionitem")
	public Set<Questionitemfigure> getQuestionitemfigures() {
		return this.questionitemfigures;
	}

	public void setQuestionitemfigures(
			Set<Questionitemfigure> questionitemfigures) {
		this.questionitemfigures = questionitemfigures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questionitem")
	public Set<Questioniteminfo> getQuestioniteminfos() {
		return this.questioniteminfos;
	}

	public void setQuestioniteminfos(Set<Questioniteminfo> questioniteminfos) {
		this.questioniteminfos = questioniteminfos;
	}

}
