package model;

// default package
// Generated Mar 15, 2014 7:27:54 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Test generated by hbm2java
 */
@Entity
@Table(name = "test")
public class Test implements java.io.Serializable {

	private Integer testId;
	private Lecturer lecturer;
	private String testDesc;
	private Date testCreationDate;
	private Date testStartTime;
	private Integer testDuration;
	private Set<Testreview> testreviews = new HashSet<Testreview>(0);
	private Set<Studenttestmap> studenttestmaps = new HashSet<Studenttestmap>(0);
	private Set<Testsection> testsections = new HashSet<Testsection>(0);

	public Test() {
	}

	public Test(Lecturer lecturer, String testDesc, Date testCreationDate,
			Date testStartTime, Integer testDuration,
			Set<Testreview> testreviews, Set<Studenttestmap> studenttestmaps,
			Set<Testsection> testsections) {
		this.lecturer = lecturer;
		this.testDesc = testDesc;
		this.testCreationDate = testCreationDate;
		this.testStartTime = testStartTime;
		this.testDuration = testDuration;
		this.testreviews = testreviews;
		this.studenttestmaps = studenttestmaps;
		this.testsections = testsections;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "TEST_ID", unique = true, nullable = false)
	public Integer getTestId() {
		return this.testId;
	}

	public void setTestId(Integer testId) {
		this.testId = testId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LECTR_ID")
	public Lecturer getLecturer() {
		return this.lecturer;
	}

	public void setLecturer(Lecturer lecturer) {
		this.lecturer = lecturer;
	}

	@Column(name = "TEST_DESC", length = 65535)
	public String getTestDesc() {
		return this.testDesc;
	}

	public void setTestDesc(String testDesc) {
		this.testDesc = testDesc;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "TEST_CREATION_DATE", length = 10)
	public Date getTestCreationDate() {
		return this.testCreationDate;
	}

	public void setTestCreationDate(Date testCreationDate) {
		this.testCreationDate = testCreationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TEST_START_TIME", length = 19)
	public Date getTestStartTime() {
		return this.testStartTime;
	}

	public void setTestStartTime(Date testStartTime) {
		this.testStartTime = testStartTime;
	}

	@Column(name = "TEST_DURATION")
	public Integer getTestDuration() {
		return this.testDuration;
	}

	public void setTestDuration(Integer testDuration) {
		this.testDuration = testDuration;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "test")
	public Set<Testreview> getTestreviews() {
		return this.testreviews;
	}

	public void setTestreviews(Set<Testreview> testreviews) {
		this.testreviews = testreviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "test")
	public Set<Studenttestmap> getStudenttestmaps() {
		return this.studenttestmaps;
	}

	public void setStudenttestmaps(Set<Studenttestmap> studenttestmaps) {
		this.studenttestmaps = studenttestmaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "test")
	public Set<Testsection> getTestsections() {
		return this.testsections;
	}

	public void setTestsections(Set<Testsection> testsections) {
		this.testsections = testsections;
	}

}
