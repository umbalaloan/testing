package model;

// default package
// Generated Mar 15, 2014 7:27:54 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Questionsolution generated by hbm2java
 */
@Entity
@Table(name = "questionsolution")
public class Questionsolution implements java.io.Serializable {

	private Integer questSolId;
	private Question question;
	private Questionitem questionitemByPreviousQuestItemId;
	private Questionitem questionitemByNextQuestItemId;
	private Questionitem questionitemByQuestItemId;
	private Byte questSolOrder;

	public Questionsolution() {
	}

	public Questionsolution(Question question,
			Questionitem questionitemByPreviousQuestItemId,
			Questionitem questionitemByNextQuestItemId,
			Questionitem questionitemByQuestItemId, Byte questSolOrder) {
		this.question = question;
		this.questionitemByPreviousQuestItemId = questionitemByPreviousQuestItemId;
		this.questionitemByNextQuestItemId = questionitemByNextQuestItemId;
		this.questionitemByQuestItemId = questionitemByQuestItemId;
		this.questSolOrder = questSolOrder;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "QUEST_SOL_ID", unique = true, nullable = false)
	public Integer getQuestSolId() {
		return this.questSolId;
	}

	public void setQuestSolId(Integer questSolId) {
		this.questSolId = questSolId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUESTION_ID")
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PREVIOUS_QUEST_ITEM_ID")
	public Questionitem getQuestionitemByPreviousQuestItemId() {
		return this.questionitemByPreviousQuestItemId;
	}

	public void setQuestionitemByPreviousQuestItemId(
			Questionitem questionitemByPreviousQuestItemId) {
		this.questionitemByPreviousQuestItemId = questionitemByPreviousQuestItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NEXT_QUEST_ITEM_ID")
	public Questionitem getQuestionitemByNextQuestItemId() {
		return this.questionitemByNextQuestItemId;
	}

	public void setQuestionitemByNextQuestItemId(
			Questionitem questionitemByNextQuestItemId) {
		this.questionitemByNextQuestItemId = questionitemByNextQuestItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUEST_ITEM_ID")
	public Questionitem getQuestionitemByQuestItemId() {
		return this.questionitemByQuestItemId;
	}

	public void setQuestionitemByQuestItemId(
			Questionitem questionitemByQuestItemId) {
		this.questionitemByQuestItemId = questionitemByQuestItemId;
	}

	@Column(name = "QUEST_SOL_ORDER")
	public Byte getQuestSolOrder() {
		return this.questSolOrder;
	}

	public void setQuestSolOrder(Byte questSolOrder) {
		this.questSolOrder = questSolOrder;
	}

}
